/*
 Copyright (C) 2018  Matt Clarke
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef XENLaunchpadContactsHeaders_h
#define XENLaunchpadContactsHeaders_h

@class CNContactFormatter;

@interface CNContact : NSObject
@property (nonatomic, readonly, copy) NSString *identifier;
+ (id)contactWithIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1 availableKeys:(id)arg2;
@end

@interface CNContactProperty : NSObject
@property (nonatomic, readonly, copy) CNContact *contact;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, retain) CNContact *internalContact;
@end

@interface CNContactStore : NSObject
- (id)unifiedContactWithIdentifier:(id)arg1 keysToFetch:(id)arg2 error:(id*)arg3;
@end

@protocol CNContactDataSource <NSObject, NSCopying>

@required

- (bool)canReload;
- (CNContact *)completeContactFromContact:(CNContact *)arg1 fromMainStoreOnly:(bool)arg2 keysToFetch:(NSArray *)arg3;
- (NSDictionary *)contactMatchInfos;
- (NSArray *)contacts;
- (id)delegate;
- (NSIndexPath *)indexPathForContact:(CNContact *)arg1;
- (NSArray *)indexSections;
- (NSString *)meContactIdentifier;
- (NSArray *)sections;
- (void)setDelegate:(id)arg1;

@optional

- (CNContactFormatter *)contactFormatter;
- (NSString *)displayName;
- (void)invalidate;
- (bool)isLoading;
- (void)reload;
- (void)reset;
- (void)setContactFormatter:(CNContactFormatter *)arg1;
- (bool)shouldReturnToAccountsAndGroupsViewAfterSearchIsCanceled;
- (CNContactStore *)store;

@end


@interface CNContactCustomDataSource : NSObject <CNContactDataSource>

@property (nonatomic, retain) NSMutableArray *allContacts;
@property (nonatomic) BOOL autoUpdateContacts;
@property (nonatomic, retain) NSArray *filteredContacts;
@property (nonatomic, retain) NSMapTable *identifiersToIndexes;
@property (nonatomic, retain) NSArray *keysToFetch;
@property (nonatomic) BOOL observingContacts;

- (id)allContacts;
- (BOOL)autoUpdateContacts;
- (BOOL)canReload;
- (id)completeContactFromContact:(id)arg1 fromMainStoreOnly:(BOOL)arg2 keysToFetch:(id)arg3;
- (void)contactDidChange:(id)arg1;
- (id)contactMatchInfos;
- (id)contacts;
- (id)filteredContacts;
- (id)identifiersToIndexes;
- (id)indexPathForContact:(id)arg1;
- (id)indexSections;
- (id)initWithContacts:(id)arg1;
- (id)initWithContacts:(id)arg1 keysToFetch:(id)arg2;
- (id)initWithContacts:(id)arg1 keysToFetch:(id)arg2 filter:(id)arg3;
- (id)keysToFetch;
- (BOOL)observingContacts;
- (id)sections;

@end

@interface CNFavoritesEntry : NSObject

@property (nonatomic, retain) NSString *abDatabaseUUID;
@property (nonatomic) int abIdentifier;
@property (nonatomic) int abUid;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, readonly) CNContactProperty *contactProperty;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, retain) NSString *label;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, retain) NSString *propertyKey;
@property (nonatomic, retain) CNContactStore *store;
@property (nonatomic) int type;
@property (nonatomic, retain) NSString *value;

+ (id)contactFormatter;
+ (id)createLabeledValueForFavoritesEntryValue:(id)arg1 label:(id)arg2 iOSLegacyIdentifier:(int)arg3 propertyKey:(id)arg4;
+ (id)descriptorsForRequiredKeysForPropertyKey:(id)arg1;
+ (id)favoritesEntryValueForLabeledValueValue:(id)arg1 propertyKey:(id)arg2;
+ (id)labeledValueValueForFavoritesEntryValue:(id)arg1 propertyKey:(id)arg2;
+ (id)sharedContactStore;

- (id)abDatabaseUUID;
- (int)abIdentifier;
- (int)abUid;
- (id)contact;
- (id)contactProperty;
- (BOOL)dirty;
- (id)initWithContact:(id)arg1 propertyKey:(id)arg2 identifier:(id)arg3 type:(int)arg4;
- (id)initWithContact:(id)arg1 propertyKey:(id)arg2 identifier:(id)arg3 type:(int)arg4 store:(id)arg5;
- (id)initWithDictionaryRepresentation:(id)arg1 store:(id)arg2;
- (id)label;
- (id)name;
- (id)propertyKey;
- (void)recheckContactStore;
- (id)store;
- (int)type;
- (id)value;

@end

/* Generated by RuntimeBrowser
 Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI
 */

@interface CNContactGridViewLayout : UICollectionViewFlowLayout

@property (nonatomic) BOOL needsUpdateLayout;
@property (nonatomic) int numberOfColumns; // !
@property (nonatomic) float offsetAfter;
@property (nonatomic) float offsetBefore;
@property (nonatomic, retain) NSIndexPath *selectedIndexPath;
@property (nonatomic) float selectedItemWidthOffset;

- (id /* block */)_animationForReusableView:(id)arg1 toLayoutAttributes:(id)arg2 type:(unsigned int)arg3;
- (void)_updateLayoutMetrics;
- (id)layoutAttributesForElementsInRect:(CGRect)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (void)prepareForCollectionViewUpdates:(id)arg1;

@end

@protocol CNContactGridViewControllerDelegate <NSObject>
@optional
-(void)gridViewController:(id)arg1 didHideInlineActionsForContactAtIndex:(long long)arg2;
-(void)gridViewController:(id)arg1 willShowInlineActions:(id)arg2 forContactAtIndex:(long long)arg3;
-(void)gridViewController:(id)arg1 didPerformAction:(id)arg2 forContactAtIndex:(long long)arg3 withContactProperty:(id)arg4;
-(BOOL)gridViewController:(id)arg1 shouldShowInlineActionsForContactAtIndex:(long long)arg2;

@end

@interface CNContactGridViewController : UICollectionViewController

@property (nonatomic) UIEdgeInsets avatarMargins;
@property (nonatomic) CGSize avatarSize;
@property (nonatomic, copy) UIColor *backgroundColor; // !
@property (nonatomic, retain) CNContactFormatter *contactFormatter;
@property (nonatomic, retain) NSObject<CNContactDataSource> *dataSource; // !
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<CNContactGridViewControllerDelegate> delegate; // !
@property (readonly, copy) NSString *description;
@property (retain) CNContactGridViewLayout *gridLayout; // !
@property (nonatomic) int indexOfContactWithExpandedInlineActions;
@property (copy) NSIndexPath *indexPathOfContactWithExpandedInlineActions;
@property (nonatomic, copy) NSArray *inlineActionsCategories;
@property (nonatomic) BOOL inlineActionsEnabled; // !
@property (nonatomic) int monogrammerStyle;
@property (nonatomic, copy) NSDictionary *nameTextAttributes;
@property (nonatomic) int numberOfColumns; // !
@property (nonatomic, retain) NSMutableDictionary *preloadedActionsManagers;

// Helper functions.
- (void)_configureCell:(id)arg1;
- (id)_contactAtIndexPath:(id)arg1;
- (int)_globalIndexForIndexPath:(id)arg1;
- (id)_indexPathForGlobalIndex:(int)arg1;
- (void)_updateItemSize;
- (void)setIndexOfContactWithExpandedInlineActions:(int)arg1 animated:(BOOL)arg2;
- (void)setIndexPathOfContactWithExpandedInlineActions:(id)arg1 animated:(BOOL)arg2;
- (void)preloadInlineActionsForContactsAtIndexes:(id)arg1;

// CNQuickActionsViewDelegate delegate
- (void)actionsView:(id)arg1 didPerformAction:(id)arg2;
- (void)actionsView:(id)arg1 willShowActions:(id)arg2;

// CNAvatarViewDelegate delegate
- (void)avatarView:(id)arg1 willShowActions:(id)arg2;

// Collectionview delegate
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (BOOL)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (int)numberOfSectionsInCollectionView:(id)arg1;

// CNContactDataSourceDelegate delegate
- (void)contactDataSourceDidChange:(id)arg1;

// Default inits
- (id)initWithCoder:(id)arg1;
- (id)initWithCollectionViewLayout:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Probably the one we want, then set grid layout after.
- (id)initWithDataSource:(id<CNContactDataSource>)arg1;

- (id)presentingViewControllerForAvatarView:(id)arg1;
- (id)viewControllerForActionsView:(id)arg1;

@end

@interface CNFavorites : NSObject
+ (id)sharedInstance;
- (id)entries;
@end


#endif /* XENLaunchpadContactsHeaders_h */
